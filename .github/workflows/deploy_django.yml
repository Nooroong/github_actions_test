name: Django CI

on:
  push:
    branches:
      - main
      - develop
env:
  REPONAME: ${{ github.repository }}
jobs:
  ci:
    name: 'Django CI'
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.10.14]

    steps:
    # 레포의 소스코드를 복사
    - uses: actions/checkout@v3

    # 파이썬 설치
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    # 파이썬 패키지 설치
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # env 파일 생성
    - name: create-env
      id: create-env
      run: echo "$ENV_FILE" > ./.env
      shell: bash
      env:
        ENV_FILE: ${{ secrets.ENV_FILE }}
    
    # 실행 테스트
    - name: Run Tests
      run: |
        python manage.py test
    
    # ghcr에 로그인
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.PAT }}

    # 도커 이미지 이름에 대문자가 들어갈 수 없으므로 레포 이름을 소문자로 변경
    - name: Convert repository name to lowercase
      run: |
        echo "REPONAME_LC=${REPONAME,,}" >> $GITHUB_ENV
      
    # 도커 이미지 빌드
    - name: Build Docker image
      run: |
        docker build -t ghcr.io/${{ env.REPONAME_LC }}:latest .

    # 이미지 푸시
    - name: Push Docker image to ghcr
      run: |
        docker push ghcr.io/${{ env.REPONAME_LC }}:latest
    
    # 기존 컨테이너 종료 후 새 이미지 실행
    - name: SSH to GCP VM and deploy container
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PEM }}
        command_timeout: 3m
        script: |
          docker stop django-container || true
          docker rm django-container || true
          docker pull ghcr.io/${{ env.REPONAME_LC }}:latest
          docker run -d \
            --name django-container \
            -p 8000:8000 \
            --env-file /home/jib_backend/github_actions_test/.env \
            ghcr.io/${{ env.REPONAME_LC }}:latest